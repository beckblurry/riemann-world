#!/usr/bin/env ruby

# Checks for open tcp ports.
# (c) Max Voit 2017

require File.expand_path('../../lib/riemann/tools', __FILE__)

class Riemann::Tools::Portcheck
  include Riemann::Tools
  require 'socket'
  require 'net/ping'
  opt :hostname, "Host, defaults to localhost", :default => `hostname`.chomp
  opt :ports, "Port to check, e.g. '-r 80'", :type => :int
  opt :opsi, "1: ping, 2: port, 3: ping & port", :type => :int

  def initialize
    @hostname = opts.fetch(:hostname)
    @port = opts.fetch(:ports)
    @opsi = opts.fetch(:opsi)
  end

  def tick
    #if @ping == true
    case @opsi
      when 1
        check = Net::Ping::External.new(@hostname)
        if check.ping?
          state="ok"
          metric="#{check.duration*1000}"
        else
          state="critical"
          metric=0
        end
        report(
          :host    => "#{@hostname}",
          :service => "ping",
          :metric => "#{metric}",
          :state   => "#{state}",
          :tags    => ["aduh"]
        )
      when 2
        portopen = Socket.tcp(@hostname, @port, connect_timeout: 5) { true } rescue false
        if portopen
          state = "ok"
          metric=1
        else
          state = "critical"
          metric=0
        end
        report(
          :host    => "#{@hostname}",
          :service => "port #{@port}",
          :metric => "#{metric}",
          :state   => "#{state}",
          :tags    => ["aduh"]
        )
      when 3
        check = Net::Ping::External.new(@hostname)
        if check.ping?
          state="ok"
          metric="#{check.duration*1000}"
        else
          state="critical"
          metric=0
        end
        report(
          :host    => "#{@hostname}",
          :service => "ping",
          :metric => "#{metric}",
          :state   => "#{state}",
          :tags    => ["aduh"]
        )

        portopen = Socket.tcp(@hostname, @port, connect_timeout: 5) { true } rescue false
        if portopen
          state = "ok"
          metric=1
        else
          state = "critical"
          metric=0
        end
        report(
          :host    => "#{@hostname}",
          :service => "port #{@port}",
          :metric  => "#{metric}",
          :state   => "#{state}",
          :tags    => ["aduh"]
        )
      else
       service=@opsi
      end
    end
end

Riemann::Tools::Portcheck.run

